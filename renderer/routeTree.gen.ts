/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/~__root"
import { Route as AppImport } from "./routes/~app"
import { Route as AboutImport } from "./routes/~about"

// Create Virtual Routes

const IndexLazyImport = createFileRoute("/")()

// Create/Update Routes

const AppRoute = AppImport.update({
  id: "/app",
  path: "/app",
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/~index.lazy").then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    "/about": {
      id: "/about"
      path: "/about"
      fullPath: "/about"
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    "/app": {
      id: "/app"
      path: "/app"
      fullPath: "/app"
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute
  "/about": typeof AboutRoute
  "/app": typeof AppRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute
  "/about": typeof AboutRoute
  "/app": typeof AppRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexLazyRoute
  "/about": typeof AboutRoute
  "/app": typeof AppRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "/about" | "/app"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/about" | "/app"
  id: "__root__" | "/" | "/about" | "/app"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutRoute: typeof AboutRoute
  AppRoute: typeof AppRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutRoute: AboutRoute,
  AppRoute: AppRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/about",
        "/app"
      ]
    },
    "/": {
      "filePath": "~index.lazy.tsx"
    },
    "/about": {
      "filePath": "~about.tsx"
    },
    "/app": {
      "filePath": "~app.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
